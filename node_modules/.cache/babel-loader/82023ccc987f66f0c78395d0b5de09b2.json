{"ast":null,"code":"/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { ScriptLoader } from '../ScriptLoader';\nimport { getTinymce } from '../TinyMCE';\nimport { isFunction, isTextareaOrInput, mergePlugins, uuid, configHandlers } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\n\nvar Editor =\n/** @class */\nfunction (_super) {\n  __extends(Editor, _super);\n\n  function Editor(props) {\n    var _a, _b, _c;\n\n    var _this = _super.call(this, props) || this;\n\n    _this.handleEditorChange = function (_evt) {\n      var editor = _this.editor;\n\n      if (editor && editor.initialized) {\n        var newContent = editor.getContent();\n\n        if (newContent !== _this.currentContent) {\n          _this.currentContent = newContent;\n\n          if (isFunction(_this.props.onEditorChange)) {\n            var format = _this.props.outputFormat;\n            var out = format === 'html' ? newContent : editor.getContent({\n              format: format\n            });\n\n            _this.props.onEditorChange(out, editor);\n          }\n        }\n      }\n    };\n\n    _this.initialise = function () {\n      var target = _this.elementRef.current;\n\n      if (!target) {\n        return; // Editor has been unmounted\n      }\n\n      var tinymce = getTinymce();\n\n      if (!tinymce) {\n        throw new Error('tinymce should have been loaded into global scope');\n      }\n\n      var finalInit = __assign(__assign({}, _this.props.init), {\n        selector: undefined,\n        target: target,\n        readonly: _this.props.disabled,\n        inline: _this.inline,\n        plugins: mergePlugins(_this.props.init && _this.props.init.plugins, _this.props.plugins),\n        toolbar: _this.props.toolbar || _this.props.init && _this.props.init.toolbar,\n        setup: function (editor) {\n          _this.editor = editor;\n\n          _this.bindHandlers({}); // When running in inline mode the editor gets the initial value\n          // from the innerHTML of the element it is initialized on.\n          // However we don't want to take on the responsibility of sanitizing\n          // to remove XSS in the react integration so we have a chicken and egg\n          // problem... We avoid it by sneaking in a set content before the first\n          // \"official\" setContent and using TinyMCE to do the sanitization.\n\n\n          if (_this.inline && !isTextareaOrInput(target)) {\n            editor.once('PostRender', function (_evt) {\n              editor.setContent(_this.getInitialValue(), {\n                no_events: true\n              });\n            });\n          }\n\n          if (_this.props.init && isFunction(_this.props.init.setup)) {\n            _this.props.init.setup(editor);\n          }\n        },\n        init_instance_callback: function (editor) {\n          var _a, _b; // check for changes that happened since tinymce.init() was called\n\n\n          var initialValue = _this.getInitialValue();\n\n          _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n\n          if (_this.currentContent !== initialValue) {\n            _this.currentContent = initialValue; // same as resetContent in TinyMCE 5\n\n            editor.setContent(initialValue);\n            editor.undoManager.clear();\n            editor.undoManager.add();\n            editor.setDirty(false);\n          }\n\n          var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n          editor.setMode(disabled ? 'readonly' : 'design'); // ensure existing init_instance_callback is called\n\n          if (_this.props.init && isFunction(_this.props.init.init_instance_callback)) {\n            _this.props.init.init_instance_callback(editor);\n          }\n        }\n      });\n\n      if (!_this.inline) {\n        target.style.visibility = '';\n      }\n\n      if (isTextareaOrInput(target)) {\n        target.value = _this.getInitialValue();\n      }\n\n      tinymce.init(finalInit);\n    };\n\n    _this.id = _this.props.id || uuid('tiny-react');\n    _this.elementRef = React.createRef();\n    _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n    _this.boundHandlers = {};\n    return _this;\n  }\n\n  Editor.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n\n    var _a, _b;\n\n    if (this.editor) {\n      this.bindHandlers(prevProps);\n\n      if (this.editor.initialized) {\n        this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n\n        if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n          // same as resetContent in TinyMCE 5\n          this.editor.setContent(this.props.initialValue);\n          this.editor.undoManager.clear();\n          this.editor.undoManager.add();\n          this.editor.setDirty(false);\n        } else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n          var localEditor_1 = this.editor;\n          localEditor_1.undoManager.transact(function () {\n            // inline editors grab focus when restoring selection\n            // so we don't try to keep their selection unless they are currently focused\n            var bookmark;\n\n            if (!_this.inline || localEditor_1.hasFocus()) {\n              try {\n                // getBookmark throws exceptions when the editor has not been focused\n                // possibly only in inline mode but I'm not taking chances\n                bookmark = localEditor_1.selection.getBookmark(3);\n              } catch (e) {\n                /* ignore */\n              }\n            }\n\n            localEditor_1.setContent(_this.props.value);\n\n            if (bookmark) {\n              try {\n                localEditor_1.selection.moveToBookmark(bookmark);\n              } catch (e) {\n                /* ignore */\n              }\n            }\n          });\n        }\n\n        if (this.props.disabled !== prevProps.disabled) {\n          var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n          this.editor.setMode(disabled ? 'readonly' : 'design');\n        }\n      }\n    }\n  };\n\n  Editor.prototype.componentDidMount = function () {\n    var _a, _b, _c, _d, _e, _f;\n\n    if (getTinymce() !== null) {\n      this.initialise();\n    } else if (this.elementRef.current && this.elementRef.current.ownerDocument) {\n      ScriptLoader.load(this.elementRef.current.ownerDocument, this.getScriptSrc(), (_b = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async) !== null && _b !== void 0 ? _b : false, (_d = (_c = this.props.scriptLoading) === null || _c === void 0 ? void 0 : _c.defer) !== null && _d !== void 0 ? _d : false, (_f = (_e = this.props.scriptLoading) === null || _e === void 0 ? void 0 : _e.delay) !== null && _f !== void 0 ? _f : 0, this.initialise);\n    }\n  };\n\n  Editor.prototype.componentWillUnmount = function () {\n    var _this = this;\n\n    var editor = this.editor;\n\n    if (editor) {\n      editor.off('change keyup compositionend setcontent', this.handleEditorChange);\n      Object.keys(this.boundHandlers).forEach(function (eventName) {\n        editor.off(eventName, _this.boundHandlers[eventName]);\n      });\n      this.boundHandlers = {};\n      editor.remove();\n      this.editor = undefined;\n    }\n  };\n\n  Editor.prototype.render = function () {\n    return this.inline ? this.renderInline() : this.renderIframe();\n  };\n\n  Editor.prototype.renderInline = function () {\n    var _a = this.props.tagName,\n        tagName = _a === void 0 ? 'div' : _a;\n    return React.createElement(tagName, {\n      ref: this.elementRef,\n      id: this.id\n    });\n  };\n\n  Editor.prototype.renderIframe = function () {\n    return React.createElement('textarea', {\n      ref: this.elementRef,\n      style: {\n        visibility: 'hidden'\n      },\n      name: this.props.textareaName,\n      id: this.id\n    });\n  };\n\n  Editor.prototype.getScriptSrc = function () {\n    if (typeof this.props.tinymceScriptSrc === 'string') {\n      return this.props.tinymceScriptSrc;\n    } else {\n      var channel = this.props.cloudChannel;\n      var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n      return \"https://cdn.tiny.cloud/1/\" + apiKey + \"/tinymce/\" + channel + \"/tinymce.min.js\";\n    }\n  };\n\n  Editor.prototype.getInitialValue = function () {\n    if (typeof this.props.initialValue === 'string') {\n      return this.props.initialValue;\n    } else if (typeof this.props.value === 'string') {\n      return this.props.value;\n    } else {\n      return '';\n    }\n  };\n\n  Editor.prototype.bindHandlers = function (prevProps) {\n    var _this = this;\n\n    if (this.editor !== undefined) {\n      // typescript chokes trying to understand the type of the lookup function\n      configHandlers(this.editor, prevProps, this.props, this.boundHandlers, function (key) {\n        return _this.props[key];\n      }); // check if we should monitor editor changes\n\n      var isValueControlled = function (p) {\n        return p.onEditorChange !== undefined || p.value !== undefined;\n      };\n\n      var wasControlled = isValueControlled(prevProps);\n      var nowControlled = isValueControlled(this.props);\n\n      if (!wasControlled && nowControlled) {\n        this.editor.on('change keyup compositionend setcontent', this.handleEditorChange);\n      } else if (wasControlled && !nowControlled) {\n        this.editor.off('change keyup compositionend setcontent', this.handleEditorChange);\n      }\n    }\n  };\n\n  Editor.propTypes = EditorPropTypes;\n  Editor.defaultProps = {\n    cloudChannel: '5'\n  };\n  return Editor;\n}(React.Component);\n\nexport { Editor };","map":{"version":3,"sources":["C:/LOCAL REPOSITORY/Licenta/licenta-front-end/node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","React","ScriptLoader","getTinymce","isFunction","isTextareaOrInput","mergePlugins","uuid","configHandlers","EditorPropTypes","Editor","_super","props","_a","_b","_c","_this","handleEditorChange","_evt","editor","initialized","newContent","getContent","currentContent","onEditorChange","format","outputFormat","out","initialise","target","elementRef","current","tinymce","Error","finalInit","init","selector","undefined","readonly","disabled","inline","plugins","toolbar","setup","bindHandlers","once","setContent","getInitialValue","no_events","init_instance_callback","initialValue","undoManager","clear","add","setDirty","setMode","style","visibility","value","id","createRef","boundHandlers","componentDidUpdate","prevProps","localEditor_1","transact","bookmark","hasFocus","selection","getBookmark","e","moveToBookmark","componentDidMount","_d","_e","_f","ownerDocument","load","getScriptSrc","scriptLoading","async","defer","delay","componentWillUnmount","off","keys","forEach","eventName","remove","render","renderInline","renderIframe","tagName","createElement","ref","name","textareaName","tinymceScriptSrc","channel","cloudChannel","apiKey","key","isValueControlled","wasControlled","nowControlled","on","propTypes","defaultProps","Component"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { ScriptLoader } from '../ScriptLoader';\nimport { getTinymce } from '../TinyMCE';\nimport { isFunction, isTextareaOrInput, mergePlugins, uuid, configHandlers } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor(props) {\n        var _a, _b, _c;\n        var _this = _super.call(this, props) || this;\n        _this.handleEditorChange = function (_evt) {\n            var editor = _this.editor;\n            if (editor && editor.initialized) {\n                var newContent = editor.getContent();\n                if (newContent !== _this.currentContent) {\n                    _this.currentContent = newContent;\n                    if (isFunction(_this.props.onEditorChange)) {\n                        var format = _this.props.outputFormat;\n                        var out = format === 'html' ? newContent : editor.getContent({ format: format });\n                        _this.props.onEditorChange(out, editor);\n                    }\n                }\n            }\n        };\n        _this.initialise = function () {\n            var target = _this.elementRef.current;\n            if (!target) {\n                return; // Editor has been unmounted\n            }\n            var tinymce = getTinymce();\n            if (!tinymce) {\n                throw new Error('tinymce should have been loaded into global scope');\n            }\n            var finalInit = __assign(__assign({}, _this.props.init), { selector: undefined, target: target, readonly: _this.props.disabled, inline: _this.inline, plugins: mergePlugins(_this.props.init && _this.props.init.plugins, _this.props.plugins), toolbar: _this.props.toolbar || (_this.props.init && _this.props.init.toolbar), setup: function (editor) {\n                    _this.editor = editor;\n                    _this.bindHandlers({});\n                    // When running in inline mode the editor gets the initial value\n                    // from the innerHTML of the element it is initialized on.\n                    // However we don't want to take on the responsibility of sanitizing\n                    // to remove XSS in the react integration so we have a chicken and egg\n                    // problem... We avoid it by sneaking in a set content before the first\n                    // \"official\" setContent and using TinyMCE to do the sanitization.\n                    if (_this.inline && !isTextareaOrInput(target)) {\n                        editor.once('PostRender', function (_evt) {\n                            editor.setContent(_this.getInitialValue(), { no_events: true });\n                        });\n                    }\n                    if (_this.props.init && isFunction(_this.props.init.setup)) {\n                        _this.props.init.setup(editor);\n                    }\n                }, init_instance_callback: function (editor) {\n                    var _a, _b;\n                    // check for changes that happened since tinymce.init() was called\n                    var initialValue = _this.getInitialValue();\n                    _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n                    if (_this.currentContent !== initialValue) {\n                        _this.currentContent = initialValue;\n                        // same as resetContent in TinyMCE 5\n                        editor.setContent(initialValue);\n                        editor.undoManager.clear();\n                        editor.undoManager.add();\n                        editor.setDirty(false);\n                    }\n                    var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    editor.setMode(disabled ? 'readonly' : 'design');\n                    // ensure existing init_instance_callback is called\n                    if (_this.props.init && isFunction(_this.props.init.init_instance_callback)) {\n                        _this.props.init.init_instance_callback(editor);\n                    }\n                } });\n            if (!_this.inline) {\n                target.style.visibility = '';\n            }\n            if (isTextareaOrInput(target)) {\n                target.value = _this.getInitialValue();\n            }\n            tinymce.init(finalInit);\n        };\n        _this.id = _this.props.id || uuid('tiny-react');\n        _this.elementRef = React.createRef();\n        _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n        _this.boundHandlers = {};\n        return _this;\n    }\n    Editor.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        var _a, _b;\n        if (this.editor) {\n            this.bindHandlers(prevProps);\n            if (this.editor.initialized) {\n                this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n                if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n                    // same as resetContent in TinyMCE 5\n                    this.editor.setContent(this.props.initialValue);\n                    this.editor.undoManager.clear();\n                    this.editor.undoManager.add();\n                    this.editor.setDirty(false);\n                }\n                else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n                    var localEditor_1 = this.editor;\n                    localEditor_1.undoManager.transact(function () {\n                        // inline editors grab focus when restoring selection\n                        // so we don't try to keep their selection unless they are currently focused\n                        var bookmark;\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            try {\n                                // getBookmark throws exceptions when the editor has not been focused\n                                // possibly only in inline mode but I'm not taking chances\n                                bookmark = localEditor_1.selection.getBookmark(3);\n                            }\n                            catch (e) { /* ignore */ }\n                        }\n                        localEditor_1.setContent(_this.props.value);\n                        if (bookmark) {\n                            try {\n                                localEditor_1.selection.moveToBookmark(bookmark);\n                            }\n                            catch (e) { /* ignore */ }\n                        }\n                    });\n                }\n                if (this.props.disabled !== prevProps.disabled) {\n                    var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    this.editor.setMode(disabled ? 'readonly' : 'design');\n                }\n            }\n        }\n    };\n    Editor.prototype.componentDidMount = function () {\n        var _a, _b, _c, _d, _e, _f;\n        if (getTinymce() !== null) {\n            this.initialise();\n        }\n        else if (this.elementRef.current && this.elementRef.current.ownerDocument) {\n            ScriptLoader.load(this.elementRef.current.ownerDocument, this.getScriptSrc(), (_b = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async) !== null && _b !== void 0 ? _b : false, (_d = (_c = this.props.scriptLoading) === null || _c === void 0 ? void 0 : _c.defer) !== null && _d !== void 0 ? _d : false, (_f = (_e = this.props.scriptLoading) === null || _e === void 0 ? void 0 : _e.delay) !== null && _f !== void 0 ? _f : 0, this.initialise);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function () {\n        var _this = this;\n        var editor = this.editor;\n        if (editor) {\n            editor.off('change keyup compositionend setcontent', this.handleEditorChange);\n            Object.keys(this.boundHandlers).forEach(function (eventName) {\n                editor.off(eventName, _this.boundHandlers[eventName]);\n            });\n            this.boundHandlers = {};\n            editor.remove();\n            this.editor = undefined;\n        }\n    };\n    Editor.prototype.render = function () {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.renderInline = function () {\n        var _a = this.props.tagName, tagName = _a === void 0 ? 'div' : _a;\n        return React.createElement(tagName, {\n            ref: this.elementRef,\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function () {\n        return React.createElement('textarea', {\n            ref: this.elementRef,\n            style: { visibility: 'hidden' },\n            name: this.props.textareaName,\n            id: this.id\n        });\n    };\n    Editor.prototype.getScriptSrc = function () {\n        if (typeof this.props.tinymceScriptSrc === 'string') {\n            return this.props.tinymceScriptSrc;\n        }\n        else {\n            var channel = this.props.cloudChannel;\n            var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n            return \"https://cdn.tiny.cloud/1/\" + apiKey + \"/tinymce/\" + channel + \"/tinymce.min.js\";\n        }\n    };\n    Editor.prototype.getInitialValue = function () {\n        if (typeof this.props.initialValue === 'string') {\n            return this.props.initialValue;\n        }\n        else if (typeof this.props.value === 'string') {\n            return this.props.value;\n        }\n        else {\n            return '';\n        }\n    };\n    Editor.prototype.bindHandlers = function (prevProps) {\n        var _this = this;\n        if (this.editor !== undefined) {\n            // typescript chokes trying to understand the type of the lookup function\n            configHandlers(this.editor, prevProps, this.props, this.boundHandlers, function (key) { return _this.props[key]; });\n            // check if we should monitor editor changes\n            var isValueControlled = function (p) { return p.onEditorChange !== undefined || p.value !== undefined; };\n            var wasControlled = isValueControlled(prevProps);\n            var nowControlled = isValueControlled(this.props);\n            if (!wasControlled && nowControlled) {\n                this.editor.on('change keyup compositionend setcontent', this.handleEditorChange);\n            }\n            else if (wasControlled && !nowControlled) {\n                this.editor.off('change keyup compositionend setcontent', this.handleEditorChange);\n            }\n        }\n    };\n    Editor.propTypes = EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: '5'\n    };\n    return Editor;\n}(React.Component));\nexport { Editor };\n"]},"metadata":{},"sourceType":"module"}
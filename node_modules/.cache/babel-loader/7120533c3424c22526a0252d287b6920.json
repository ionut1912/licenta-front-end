{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\LOCAL REPOSITORY\\\\Licenta\\\\licenta-front-end\\\\src\\\\components\\\\Joburi\\\\Aplicare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport AplicareJobService from '../../services/aplicareJob.serivce';\nimport './Aplicare.css';\n\nfunction Aplicare(props) {\n  _s();\n\n  const [valuesSubmit, setValuesSubmit] = useState({});\n  const validateSchema = Yup.object().shape({\n    full_name: Yup.string().required(\"This field is required!\"),\n    email: Yup.string().email(\"Invalid email!\").required(\"This field is required!\"),\n    telefon: Yup.string().required(\"This field is required!\"),\n    cv: Yup.string().required(\"This field is required!\")\n  });\n\n  function handleSubmit(values) {\n    console.log(values);\n    const data = \"qwqqq\";\n    const values1 = setValuesSubmit(prevValues => {\n      return { ...prevValues,\n        data\n      };\n    });\n    console.log(values1);\n    AplicareJobService.sendAplicare(1, 58, values);\n    props.showDetails(false);\n    props.close(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-aplicare\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        full_name: '',\n        email: '',\n        telefon: '',\n        cv: ''\n      },\n      onSubmit: values => {\n        handleSubmit(values);\n      },\n      validationSchema: validateSchema,\n      children: props => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputfn\",\n            children: \"Full name*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"full_name\",\n            value: props.full_name,\n            className: \"form-control\",\n            id: \"inputfn\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), props.errors.full_name && props.touched.full_name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmail\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: props.email,\n            className: \"form-control\",\n            id: \"inputEmail\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), props.errors.email && props.touched.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputPhone\",\n            children: \"Telefon*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"telefon\",\n            value: props.telefon,\n            className: \"form-control\",\n            id: \"inputPhone\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), props.errors.telefon && props.touched.telefon && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.telefon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputcv\",\n            children: \"CV*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cv\",\n            value: props.cv,\n            className: \"form-control\",\n            id: \"inputcv\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), props.errors.cv && props.touched.cv && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.cv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          name: \"submit\",\n          className: \"btn-submit\",\n          children: \"Aplica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Aplicare, \"zJqVxW4AgPMbig8uGjQK2d+N/XA=\");\n\n_c = Aplicare;\nexport default Aplicare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aplicare\");","map":{"version":3,"sources":["C:/LOCAL REPOSITORY/Licenta/licenta-front-end/src/components/Joburi/Aplicare.js"],"names":["React","useState","Formik","Yup","AplicareJobService","Aplicare","props","valuesSubmit","setValuesSubmit","validateSchema","object","shape","full_name","string","required","email","telefon","cv","handleSubmit","values","console","log","data","values1","prevValues","sendAplicare","showDetails","close","handleChange","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport AplicareJobService from '../../services/aplicareJob.serivce'\r\nimport './Aplicare.css'\r\n\r\nfunction Aplicare(props) {\r\n    \r\n    const [valuesSubmit, setValuesSubmit] = useState({\r\n\r\n    });\r\n\r\n    const validateSchema = Yup.object().shape({\r\n        full_name: Yup.string()\r\n            .required(\"This field is required!\"),\r\n        email: Yup.string()\r\n            .email(\"Invalid email!\")\r\n            .required(\"This field is required!\"),\r\n        telefon: Yup.string()\r\n            .required(\"This field is required!\"),\r\n        cv: Yup.string()\r\n            .required(\"This field is required!\")\r\n    })\r\n\r\n    function handleSubmit(values) {\r\n        console.log(values);\r\n\r\n   \r\n        const data = \"qwqqq\";\r\n        const values1 =  setValuesSubmit(prevValues => {\r\n            return {...prevValues, data};\r\n        });\r\n    console.log(values1);\r\n    AplicareJobService.sendAplicare(1, 58, values);\r\n    props.showDetails(false);\r\n    props.close(false);\r\n}\r\n\r\nreturn (\r\n    <div className=\"form-aplicare\">\r\n        <Formik\r\n            initialValues={\r\n                {\r\n                    full_name: '',\r\n                    email: '',\r\n                    telefon: '',\r\n                    cv: '',\r\n\r\n                }\r\n            }\r\n\r\n            onSubmit={(values) => {\r\n                handleSubmit(values);\r\n\r\n            }}\r\n\r\n            validationSchema={validateSchema}>\r\n\r\n            {props => (\r\n                <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputfn\">Full name*</label>\r\n                        <input type=\"text\"\r\n                            name=\"full_name\"\r\n                            value={props.full_name}\r\n                            className=\"form-control\"\r\n                            id=\"inputfn\"\r\n                            onChange={props.handleChange}\r\n                            onBlur={props.handleBlur}\r\n\r\n                        />\r\n                        {props.errors.full_name && props.touched.full_name && <p className=\"text-danger\">{props.errors.full_name}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputEmail\">Email*</label>\r\n                        <input type=\"email\"\r\n                            name=\"email\"\r\n                            value={props.email}\r\n                            className=\"form-control\"\r\n                            id=\"inputEmail\"\r\n                            onChange={props.handleChange}\r\n                            onBlur={props.handleBlur}\r\n                        />\r\n                        {props.errors.email && props.touched.email && <p className=\"text-danger\">{props.errors.email}</p>}\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputPhone\">Telefon*</label>\r\n                        <input type=\"text\"\r\n                            name=\"telefon\"\r\n                            value={props.telefon}\r\n                            className=\"form-control\"\r\n                            id=\"inputPhone\"\r\n                            onChange={props.handleChange}\r\n                            onBlur={props.handleBlur}\r\n                        />\r\n                        {props.errors.telefon && props.touched.telefon && <p className=\"text-danger\">{props.errors.telefon}</p>}\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputcv\">CV*</label>\r\n                        <input type=\"text\"\r\n                            name=\"cv\"\r\n                            value={props.cv}\r\n                            className=\"form-control\"\r\n                            id=\"inputcv\"\r\n                            onChange={props.handleChange}\r\n                            onBlur={props.handleBlur}\r\n                        />\r\n                        {props.errors.cv && props.touched.cv && <p className=\"text-danger\">{props.errors.cv}</p>}\r\n                    </div>\r\n                    {/* <div className=\"form-group\">\r\n                            <label htmlFor=\"inputCV\">CV*</label>\r\n                            <input type=\"file\"\r\n                                id=\"inputCV\"\r\n                                name=\"cv\"\r\n                                value={props.cv}\r\n                                className=\"form-control\"\r\n                                accept=\".pdf,.doc,.docx\"\r\n                                onChange={props.handleChange}\r\n                                onBlur={props.handleBlur}\r\n                            />\r\n                            {props.errors.cv && props.touched.cv && <p className=\"text-danger\">{props.errors.cv}</p>}\r\n                        </div> */}\r\n\r\n                    <button type=\"submit\" name=\"submit\" className=\"btn-submit\" >Aplica</button>\r\n\r\n                </form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Aplicare\r\n"]},"metadata":{},"sourceType":"module"}
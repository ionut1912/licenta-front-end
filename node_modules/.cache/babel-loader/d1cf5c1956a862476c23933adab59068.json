{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\LOCAL REPOSITORY\\\\Licenta\\\\licenta-front-end\\\\src\\\\components\\\\PrivateRouteUser.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRouteUser = ({\n  component: Comp,\n  loggedIn,\n  path\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    render: () => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(Comp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRouteUser;\nexport default PrivateRouteUser;\n{\n  /* <Route\r\n  path={path}\r\n  render={() => {\r\n     return loggedIn &&loggedIn.role===\"ROLE_USER\" ? (\r\n         <Comp />\r\n     ) : (\r\n             <Redirect\r\n                 to={{\r\n                     pathname: \"/\"\r\n                 }}\r\n             />\r\n         );\r\n  }} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouteUser\");","map":{"version":3,"sources":["C:/LOCAL REPOSITORY/Licenta/licenta-front-end/src/components/PrivateRouteUser.js"],"names":["React","Redirect","Route","PrivateRouteUser","component","Comp","loggedIn","path"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,IAAb;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAAyC;AAC9D,sBACI,QAAC,KAAD;AACI,IAAA,IAAI,EAAEA,IADV;AAEI,IAAA,MAAM,EAAE,MAAM;AACV;;AACI;AAAA,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAEP;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;KAAMJ,gB;AAaN,eAAeA,gBAAf;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAM","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\nconst PrivateRouteUser = ({ component: Comp, loggedIn, path }) => {\r\n    return (\r\n        <Route\r\n            path={path}\r\n            render={() => {\r\n                return \r\n                    <Comp/>\r\n           \r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRouteUser\r\n\r\n{/* <Route\r\npath={path}\r\nrender={() => {\r\n    return loggedIn &&loggedIn.role===\"ROLE_USER\" ? (\r\n        <Comp />\r\n    ) : (\r\n            <Redirect\r\n                to={{\r\n                    pathname: \"/\"\r\n                }}\r\n            />\r\n        );\r\n}} */}"]},"metadata":{},"sourceType":"module"}
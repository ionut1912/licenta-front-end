{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\LOCAL REPOSITORY\\\\Licenta\\\\licenta-front-end\\\\src\\\\components\\\\CV\\\\ProjectSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport Row from './Row';\nimport * as Yup from \"yup\";\n\nfunction ProjectSection(props) {\n  _s();\n\n  const [projectExperience, setProjectExperience] = useState(false);\n  const [projectFields, setProjectFields] = useState(false);\n  const [project, setProject] = useState({\n    project_name: \"\",\n    descrire: \"\"\n  });\n\n  function deleteProject(id) {\n    props.setProjects(prevProjects => {\n      return prevProjects.filter((projectItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  function editProject(id) {\n    const project1 = props.projects.filter((projectItem, index) => {\n      return index === id;\n    });\n    setProject({\n      project_name: project1[0].project_name,\n      descrire: project1[0].descrire\n    });\n    deleteProject(id);\n    setProjectFields(true);\n  }\n\n  function removeProject(event) {\n    setProjectFields(false);\n    setProject({\n      project_name: \"\",\n      descrire: \"\"\n    });\n    event.preventDefault();\n  }\n\n  const formSchema = Yup.object().shape({\n    project_name: Yup.string().required(\"This field is required!\")\n  });\n\n  function handleSubmit(values) {\n    props.addProject(values);\n    setProjectFields(false);\n    setProject({\n      project_name: \"\",\n      descrire: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-cls\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-secondary\",\n      onClick: () => setProjectExperience(!projectExperience),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-file icon text-dark \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 102\n      }, this), \" Projects\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-section\",\n      style: {\n        display: projectExperience === false && 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: props.projects.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-12\",\n          children: props.projects.map((rowItem, index) => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              id: index,\n              title: rowItem.project_name,\n              onDelete: deleteProject,\n              onEdit: project.project_name !== \"\" ? () => {} : editProject\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields-project\",\n        style: {\n          display: projectFields === false && 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: {\n            project_name: project.project_name,\n            descrire: project.descrire\n          },\n          onSubmit: (values, {\n            resetForm\n          }) => {\n            handleSubmit(values);\n            resetForm({\n              values: ''\n            });\n          },\n          validationSchema: formSchema,\n          children: props => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: props.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputProject\",\n                  children: \"Project*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"project_name\",\n                  onChange: props.handleChange,\n                  onBlur: props.handleBlur,\n                  value: props.values.project_name,\n                  className: \"form-control\",\n                  id: \"inputProject\",\n                  placeholder: \"ex: Site pentru gestionarea unui magazin online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this), props.errors.project_name && props.touched.project_name && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: props.errors.project_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 107\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputDesc\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"descrire\",\n                  onChange: props.handleChange,\n                  onBlur: props.handleBlur,\n                  value: props.values.descrire,\n                  className: \"form-control\",\n                  id: \"inputDesc\",\n                  placeholder: \"ex: Am folosit Spring boot si React\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  props.resetForm({\n                    values: ''\n                  });\n                },\n                className: \"btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 108\n                }, this), \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                name: \"submit\",\n                className: \"btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 89\n                }, this), \"Save\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggler-additionalInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/\",\n          className: \"btn-additionalInfo\",\n          onClick: () => {\n            setProjectFields(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus-circle\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 108\n          }, this), \" Add another project to experience\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectSection, \"O4RwXzCf1pRPO7m2kc/ZvjkosoY=\");\n\n_c = ProjectSection;\nexport default ProjectSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectSection\");","map":{"version":3,"sources":["C:/LOCAL REPOSITORY/Licenta/licenta-front-end/src/components/CV/ProjectSection.js"],"names":["React","useState","Formik","Row","Yup","ProjectSection","props","projectExperience","setProjectExperience","projectFields","setProjectFields","project","setProject","project_name","descrire","deleteProject","id","setProjects","prevProjects","filter","projectItem","index","editProject","project1","projects","removeProject","event","preventDefault","formSchema","object","shape","string","required","handleSubmit","values","addProject","display","length","map","rowItem","resetForm","handleChange","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Formik } from 'formik';\r\nimport Row from './Row'\r\nimport * as Yup from \"yup\";\r\n\r\nfunction ProjectSection(props) {\r\n\r\n    const [projectExperience, setProjectExperience] = useState(false);\r\n    const [projectFields, setProjectFields] = useState(false);\r\n    const [project, setProject] = useState({\r\n        project_name: \"\",\r\n        descrire: \"\"\r\n    });\r\n\r\n    function deleteProject(id) {\r\n        props.setProjects(prevProjects => {\r\n            return prevProjects.filter((projectItem, index) => {\r\n                return index !== id;\r\n            });\r\n        });\r\n    }\r\n\r\n    function editProject(id) {\r\n\r\n        const project1 = props.projects.filter((projectItem, index) => {\r\n            return index === id;\r\n        });\r\n\r\n        setProject({\r\n            project_name: project1[0].project_name,\r\n            descrire: project1[0].descrire\r\n        })\r\n\r\n        deleteProject(id);\r\n\r\n        setProjectFields(true);\r\n    }\r\n\r\n    function removeProject(event) {\r\n\r\n        setProjectFields(false);\r\n\r\n        setProject({\r\n            project_name: \"\",\r\n            descrire: \"\"\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const formSchema = Yup.object().shape({\r\n        project_name: Yup.string()\r\n            .required(\"This field is required!\"),\r\n    })\r\n\r\n    function handleSubmit(values) {\r\n\r\n        props.addProject(values);\r\n\r\n        setProjectFields(false);\r\n\r\n        setProject({\r\n            project_name: \"\",\r\n            descrire: \"\"\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-cls\">\r\n            <h3 className=\"text-secondary\" onClick={() => setProjectExperience(!projectExperience)} ><i className=\"fa fa-file icon text-dark \"></i> Projects</h3>\r\n            <hr className=\"hr\" />\r\n            <div className=\"projects-section\" style={{\r\n                display: projectExperience === false && 'none'\r\n            }}>\r\n\r\n                <div className=\"form-row\">\r\n                    {props.projects.length === 0 ? null : (\r\n                        <div className=\"form-group col-md-12\">\r\n                            {props.projects.map((rowItem, index) => {\r\n                                return (\r\n                                    <Row\r\n                                        key={index}\r\n                                        id={index}\r\n                                        title={rowItem.project_name}\r\n                                        onDelete={deleteProject}\r\n                                        onEdit={project.project_name !== \"\" ? (() => { }) : editProject}\r\n                                    />);\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"fields-project\" style={{\r\n                    display: projectFields === false && 'none'\r\n                }}>\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n\r\n                        initialValues={\r\n                            {\r\n                                project_name: project.project_name,\r\n                                descrire: project.descrire\r\n                            }\r\n                        }\r\n\r\n                        onSubmit={(values, { resetForm }) => {\r\n                            handleSubmit(values);\r\n                            resetForm({ values: '' })\r\n                        }}\r\n\r\n                        validationSchema={formSchema}>\r\n\r\n                        {props => (\r\n                            <form onSubmit={props.handleSubmit} >\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label htmlFor=\"inputProject\">Project*</label>\r\n                                        <input type=\"text\"\r\n                                            name=\"project_name\"\r\n                                            onChange={props.handleChange}\r\n                                            onBlur={props.handleBlur}\r\n                                            value={props.values.project_name}\r\n                                            className=\"form-control\"\r\n                                            id=\"inputProject\"\r\n                                            placeholder=\"ex: Site pentru gestionarea unui magazin online\" />\r\n                                              {props.errors.project_name && props.touched.project_name && <p className=\"text-danger\">{props.errors.project_name}</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label htmlFor=\"inputDesc\">Description</label>\r\n                                        <textarea\r\n                                            name=\"descrire\"\r\n                                            onChange={props.handleChange}\r\n                                            onBlur={props.handleBlur}\r\n                                            value={props.values.descrire}\r\n                                            className=\"form-control\"\r\n                                            id=\"inputDesc\"\r\n                                            placeholder=\"ex: Am folosit Spring boot si React\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-option\">\r\n                                    <button onClick={() => {props.resetForm({values:''})}} className=\"btn\"><i className=\"fas fa-trash-alt\"></i>Delete</button>\r\n                                    <button type=\"submit\" name=\"submit\" className=\"btn\"><i className=\"fas fa-save\"></i>Save</button>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n\r\n                <div className=\"toggler-additionalInfo\">\r\n                    <a href=\"#/\" className=\"btn-additionalInfo\" onClick={() => { setProjectFields(true) }}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add another project to experience</a>\r\n                </div>\r\n                <hr className=\"hr\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSection\r\n"]},"metadata":{},"sourceType":"module"}
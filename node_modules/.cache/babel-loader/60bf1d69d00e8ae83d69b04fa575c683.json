{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\LOCAL REPOSITORY\\\\Licenta\\\\licenta-front-end\\\\src\\\\components\\\\Joburi\\\\Aplicare.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport AplicareJobService from '../../services/aplicareJob.serivce';\nimport './Aplicare.css';\n\nfunction Aplicare(props) {\n  const validateSchema = Yup.object().shape({\n    full_name: Yup.string().required(\"This field is required!\"),\n    email: Yup.string().email(\"Invalid email!\").required(\"This field is required!\"),\n    telefon: Yup.string().required(\"This field is required!\"),\n    cv: Yup.string().required(\"This field is required!\")\n  });\n\n  function handleSubmit(values) {\n    console.log(values);\n    AplicareJobService.sendAplicare(1, 58, values);\n    props.showDetails(false);\n    props.close(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-aplicare\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        full_name: '',\n        email: '',\n        telefon: '',\n        cv: '',\n        dataAplicarii: new Date().toDateString\n      },\n      onSubmit: values => {\n        handleSubmit(values);\n      },\n      validationSchema: validateSchema,\n      children: props => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputfn\",\n            children: \"Full name*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"full_name\",\n            value: props.full_name,\n            className: \"form-control\",\n            id: \"inputfn\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), props.errors.full_name && props.touched.full_name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmail\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: props.email,\n            className: \"form-control\",\n            id: \"inputEmail\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), props.errors.email && props.touched.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputPhone\",\n            children: \"Telefon*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"telefon\",\n            value: props.telefon,\n            className: \"form-control\",\n            id: \"inputPhone\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), props.errors.telefon && props.touched.telefon && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.telefon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputcv\",\n            children: \"CV*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cv\",\n            value: props.cv,\n            className: \"form-control\",\n            id: \"inputcv\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), props.errors.cv && props.touched.cv && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: props.errors.cv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          name: \"submit\",\n          className: \"btn-submit\",\n          children: \"Aplica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Aplicare;\nexport default Aplicare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aplicare\");","map":{"version":3,"sources":["C:/LOCAL REPOSITORY/Licenta/licenta-front-end/src/components/Joburi/Aplicare.js"],"names":["React","Formik","Yup","AplicareJobService","Aplicare","props","validateSchema","object","shape","full_name","string","required","email","telefon","cv","handleSubmit","values","console","log","sendAplicare","showDetails","close","dataAplicarii","Date","toDateString","handleChange","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport AplicareJobService from '../../services/aplicareJob.serivce'\r\nimport './Aplicare.css'\r\n\r\nfunction Aplicare(props) {\r\n\r\n\r\n    const validateSchema = Yup.object().shape({\r\n        full_name: Yup.string()\r\n            .required(\"This field is required!\"),\r\n        email: Yup.string()\r\n            .email(\"Invalid email!\")\r\n            .required(\"This field is required!\"),\r\n        telefon: Yup.string()\r\n            .required(\"This field is required!\"),\r\n        cv: Yup.string()\r\n            .required(\"This field is required!\")\r\n    })\r\n\r\n    function handleSubmit(values) {\r\n        console.log(values);\r\n        AplicareJobService.sendAplicare(1,58,values);\r\n        props.showDetails(false);\r\n        props.close(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-aplicare\">\r\n            <Formik\r\n                initialValues={\r\n                    {\r\n                        full_name: '',\r\n                        email: '',\r\n                        telefon: '',\r\n                        cv: '',\r\n                        dataAplicarii: new Date().toDateString\r\n                    }\r\n                }\r\n\r\n                onSubmit={(values) => {\r\n                    handleSubmit(values);\r\n\r\n                }}\r\n\r\n                validationSchema={validateSchema}>\r\n\r\n                {props => (\r\n                    <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputfn\">Full name*</label>\r\n                            <input type=\"text\"\r\n                                name=\"full_name\"\r\n                                value={props.full_name}\r\n                                className=\"form-control\"\r\n                                id=\"inputfn\"\r\n                                onChange={props.handleChange}\r\n                                onBlur={props.handleBlur}\r\n\r\n                            />\r\n                            {props.errors.full_name && props.touched.full_name && <p className=\"text-danger\">{props.errors.full_name}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputEmail\">Email*</label>\r\n                            <input type=\"email\"\r\n                                name=\"email\"\r\n                                value={props.email}\r\n                                className=\"form-control\"\r\n                                id=\"inputEmail\"\r\n                                onChange={props.handleChange}\r\n                                onBlur={props.handleBlur}\r\n                            />\r\n                            {props.errors.email && props.touched.email && <p className=\"text-danger\">{props.errors.email}</p>}\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputPhone\">Telefon*</label>\r\n                            <input type=\"text\"\r\n                                name=\"telefon\"\r\n                                value={props.telefon}\r\n                                className=\"form-control\"\r\n                                id=\"inputPhone\"\r\n                                onChange={props.handleChange}\r\n                                onBlur={props.handleBlur}\r\n                            />\r\n                            {props.errors.telefon && props.touched.telefon && <p className=\"text-danger\">{props.errors.telefon}</p>}\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputcv\">CV*</label>\r\n                            <input type=\"text\"\r\n                                name=\"cv\"\r\n                                value={props.cv}\r\n                                className=\"form-control\"\r\n                                id=\"inputcv\"\r\n                                onChange={props.handleChange}\r\n                                onBlur={props.handleBlur}\r\n                            />\r\n                            {props.errors.cv && props.touched.cv && <p className=\"text-danger\">{props.errors.cv}</p>}\r\n                        </div>\r\n                        {/* <div className=\"form-group\">\r\n                            <label htmlFor=\"inputCV\">CV*</label>\r\n                            <input type=\"file\"\r\n                                id=\"inputCV\"\r\n                                name=\"cv\"\r\n                                value={props.cv}\r\n                                className=\"form-control\"\r\n                                accept=\".pdf,.doc,.docx\"\r\n                                onChange={props.handleChange}\r\n                                onBlur={props.handleBlur}\r\n                            />\r\n                            {props.errors.cv && props.touched.cv && <p className=\"text-danger\">{props.errors.cv}</p>}\r\n                        </div> */}\r\n\r\n                        <button type=\"submit\" name=\"submit\" className=\"btn-submit\" >Aplica</button>\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aplicare\r\n"]},"metadata":{},"sourceType":"module"}
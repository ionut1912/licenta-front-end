{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\LOCAL REPOSITORY\\\\Licenta\\\\licenta-front-end\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const isLoggedIn = AuthService.isLoggedIn();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"home\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/LOCAL REPOSITORY/Licenta/licenta-front-end/src/components/PrivateRoute.js"],"names":["React","Redirect","Route","AuthService","PrivateRoute","component","Component","rest","isLoggedIn","props","pathname"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAExD,QAAMC,UAAU,GAAGL,WAAW,CAACK,UAAZ,EAAnB;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAEE,KAAK,IAAID,UAAU,gBACtB,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,YADsB,gBAGnB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhBD;;KAAMN,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const isLoggedIn = AuthService.isLoggedIn();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => isLoggedIn ?\r\n                (<Component {...props} />) :\r\n                (\r\n                    <Redirect to={{ pathname: \"home\" }} />\r\n                )\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n"]},"metadata":{},"sourceType":"module"}